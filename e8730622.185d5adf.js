(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{153:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/ways1-b1b018cb40185b775d8888832dd88ec2.png"},154:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/ways2-d74bed1c797b2ffa67719b3ea46403b8.png"},77:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return r})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return l})),n.d(t,"default",(function(){return d}));var a=n(3),i=n(7),o=(n(0),n(91)),s=["components"],r={id:"ways_of_working",title:"Our Ways of Working"},c={unversionedId:"ways_of_working",id:"ways_of_working",isDocsHomePage:!1,title:"Our Ways of Working",description:"Planning/Prioritisation",source:"@site/docs/ways_of_working.md",slug:"/ways_of_working",permalink:"/ways-of-working/ways_of_working",editUrl:"https://github.com/LBHackney-IT/ways-of-working/edit/master/docs/ways_of_working.md",version:"current",sidebar:"docs",previous:{title:"HackIT\u2019s Development PR process",permalink:"/ways-of-working/"},next:{title:"Contact Our Development Team",permalink:"/ways-of-working/contact_us"}},l=[{value:"Planning/Prioritisation",id:"planningprioritisation",children:[]},{value:"Weekly task allocation/review",id:"weekly-task-allocationreview",children:[]},{value:"Development process -",id:"development-process--",children:[]},{value:"API development starting point",id:"api-development-starting-point",children:[]}],p={toc:l};function d(e){var t=e.components,r=Object(i.a)(e,s);return Object(o.b)("wrapper",Object(a.a)({},p,r,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"planningprioritisation"},"Planning/Prioritisation"),Object(o.b)("p",null,"a. What are the  user and data needs\nb. What about the other work streams - what impact on our planning/prioritisation. Are there any dependencies or crossovers?\nc. What task can we pick up that adds the most value or has the most urgent dependencies - scoring\nd. Add to project board Trello/Clickup/Jira - This is how we share what we are doing and our progress (specific to development).\ne. What are our dependencies?\ni. Do we have what we need ie - common APIs\nii. If no API is there a specification (Swagger doc) we can use to stub until it is available?\n",Object(o.b)("img",{alt:"API",src:n(153).default})),Object(o.b)("h2",{id:"weekly-task-allocationreview"},"Weekly task allocation/review"),Object(o.b)("p",null,"a. What\u2019s outstanding from the previous sprint/week?\nb. What\u2019s next?\nc. Who\u2019s available?"),Object(o.b)("h2",{id:"development-process--"},"Development process -"),Object(o.b)("p",null,"Branching strategy based off the API playbook - ",Object(o.b)("a",{parentName:"p",href:"https://playbook.hackney.gov.uk/API-Playbook/branching_strategies/#gitflow"},"https://playbook.hackney.gov.uk/API-Playbook/branching_strategies/#gitflow"),"\n",Object(o.b)("img",{alt:"API",src:n(154).default})),Object(o.b)("p",null,"a. Daily stand-ups  (5 - 10 minutes) - What is everyone doing, is anyone blocked?\nb. TDD - Git Branch -> Test -> Code\nc. Pull request/Peer Review - Frequent\nd. Release\ne. Rinse and repeat - start process on next task"),Object(o.b)("h2",{id:"api-development-starting-point"},"API development starting point"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"API boilerplate - ",Object(o.b)("a",{parentName:"li",href:"https://github.com/LBHackney-IT/lbh-base-api"},"https://github.com/LBHackney-IT/lbh-base-api"))))}d.isMDXComponent=!0}}]);